
function [mtty] = LamKus02_odeo(mttx,mttu,mttt,mttpar);
## [mtty] = LamKus02_odeo(mttx,mttu,mttt,mttpar);
## System LamKus02, representation odeo, language m; 
## File LamKus02_odeo.m; 
## Generated by MTT on Mon Mar  2 14:55:39 AEDT 2015; 

## Horrible fudge to make mtt_m2p work
global ...
mtt_no_globals ;

## Parameters 
   k_adp 	= mttpar(1);
   k_amp 	= mttpar(2);
   k_atp 	= mttpar(3);
   k_cr 	= mttpar(4);
   k_dhap 	= mttpar(5);
   k_dpg 	= mttpar(6);
   k_f6p 	= mttpar(7);
   k_fbp 	= mttpar(8);
   k_g1p 	= mttpar(9);
   k_g6p 	= mttpar(10);
   k_gap 	= mttpar(11);
   k_gly 	= mttpar(12);
   k_lac 	= mttpar(13);
   k_laco 	= mttpar(14);
   k_nad 	= mttpar(15);
   k_nadh 	= mttpar(16);
   k_p 	= mttpar(17);
   k_p2g 	= mttpar(18);
   k_p3g 	= mttpar(19);
   k_pcr 	= mttpar(20);
   k_pep 	= mttpar(21);
   k_pyr 	= mttpar(22);
   rt 	= mttpar(23);
   k_adk 	= mttpar(24);
   k_ald 	= mttpar(25);
   k_atpase 	= mttpar(26);
   k_ck 	= mttpar(27);
   k_eno 	= mttpar(28);
   k_fout 	= mttpar(29);
   k_gapdh 	= mttpar(30);
   k_gpa 	= mttpar(31);
   k_gpb 	= mttpar(32);
   k_ldh 	= mttpar(33);
   k_pfk 	= mttpar(34);
   k_pgi 	= mttpar(35);
   k_pgk 	= mttpar(36);
   k_pglm 	= mttpar(37);
   k_pgm 	= mttpar(38);
   k_pk 	= mttpar(39);
   k_tpi 	= mttpar(40);
   rho_adk 	= mttpar(41);
   rho_ald 	= mttpar(42);
   rho_atpase 	= mttpar(43);
   rho_ck 	= mttpar(44);
   rho_eno 	= mttpar(45);
   rho_fout 	= mttpar(46);
   rho_gapdh 	= mttpar(47);
   rho_gpa 	= mttpar(48);
   rho_gpb 	= mttpar(49);
   rho_ldh 	= mttpar(50);
   rho_pfk 	= mttpar(51);
   rho_pgi 	= mttpar(52);
   rho_pgk 	= mttpar(53);
   rho_pglm 	= mttpar(54);
   rho_pgm 	= mttpar(55);
   rho_pk 	= mttpar(56);
   rho_tpi 	= mttpar(57);
   v_adk 	= mttpar(58);
   v_ald 	= mttpar(59);
   v_atpase 	= mttpar(60);
   v_ck 	= mttpar(61);
   v_eno 	= mttpar(62);
   v_fout 	= mttpar(63);
   v_gapdh 	= mttpar(64);
   v_gpa 	= mttpar(65);
   v_gpb 	= mttpar(66);
   v_ldh 	= mttpar(67);
   v_pfk 	= mttpar(68);
   v_pgi 	= mttpar(69);
   v_pgk 	= mttpar(70);
   v_pglm 	= mttpar(71);
   v_pgm 	= mttpar(72);
   v_pk 	= mttpar(73);
   v_tpi 	= mttpar(74);

## States 
mttx1 = mttx(1) ;
mttx2 = mttx(2) ;
mttx3 = mttx(3) ;
mttx4 = mttx(4) ;
mttx5 = mttx(5) ;
mttx6 = mttx(6) ;
mttx7 = mttx(7) ;
mttx8 = mttx(8) ;
mttx9 = mttx(9) ;
mttx10 = mttx(10) ;
mttx11 = mttx(11) ;
mttx12 = mttx(12) ;
mttx13 = mttx(13) ;
mttx14 = mttx(14) ;
mttx15 = mttx(15) ;
mttx16 = mttx(16) ;
mttx17 = mttx(17) ;
mttx18 = mttx(18) ;
mttx19 = mttx(19) ;
mttx20 = mttx(20) ;
mttx21 = mttx(21) ;
mttx22 = mttx(22) ;

## Inputs 
mttu1 = mttu(1);
mttu2 = mttu(2);
mttu3 = mttu(3);
mttu4 = mttu(4);
mttu5 = mttu(5);
mttu6 = mttu(6);
mttu7 = mttu(7);
mttu8 = mttu(8);
mttu9 = mttu(9);
mttu10 = mttu(10);
mttu11 = mttu(11);
mttu12 = mttu(12);
mttu13 = mttu(13);
mttu14 = mttu(14);
mttu15 = mttu(15);
mttu16 = mttu(16);
mttu17 = mttu(17);

## Unknown Inputs 

   mtty = zeros(17,1);

## BEGIN Code

## Code
  mtty(1) = (v_adk*( - k_adp**2*mttx1**2 + k_amp*k_atp*mttx2*mttx3))/(k_adk +  \
k_adp**2*mttx1**2*rho_adk - k_amp*k_atp*mttx2*mttx3*rho_adk + k_amp*k_atp*mttx2* \
  mttx3);
  mtty(2) = (v_ck*( - k_adp*k_pcr*mttx1*mttx6 + k_atp*k_cr*mttx3*mttx4))/(k_adp \
*k_pcr*mttx1*mttx6*rho_ck - k_atp*k_cr*mttx3*mttx4*rho_ck + k_atp*k_cr*mttx3* \
  mttx4 + k_ck);
  mtty(3) = (v_ald*( - k_dhap*k_gap*mttx7*mttx9 + k_fbp*mttx8))/(k_ald + k_dhap \
*k_gap*mttx7*mttx9*rho_ald - k_fbp*mttx8*rho_ald + k_fbp*mttx8);
  mtty(4) = (v_tpi*( - k_dhap*mttx7 + k_gap*mttx9))/(k_dhap*mttx7*rho_tpi -  \
k_gap*mttx9*rho_tpi + k_gap*mttx9 + k_tpi);
  mtty(5) = (v_eno*(k_p2g*mttx15 - k_pep*mttx17))/(k_eno - k_p2g*mttx15*rho_eno \
 + k_p2g*mttx15 + k_pep*mttx17*rho_eno);
  mtty(6) = (v_fout*(k_lac*mttx11 - k_laco*mttx12))/(k_fout - k_lac*mttx11* \
rho_fout + k_lac*mttx11 + k_laco*mttx12*rho_fout);
  mtty(7) = (v_pgm*( - k_p2g*mttx15 + k_p3g*mttx16))/(k_p2g*mttx15*rho_pgm -  \
k_p3g*mttx16*rho_pgm + k_p3g*mttx16 + k_pgm);
  mtty(8) = (v_gapdh*( - k_dpg*k_nadh*mttx10*mttx14 + k_gap*k_nad*k_p*mttx13* \
  mttx5*mttx9))/(k_dpg*k_nadh*mttx10*mttx14*rho_gapdh - k_gap*k_nad*k_p*mttx13* \
  mttx5*mttx9*rho_gapdh + k_gap*k_nad*k_p*mttx13*mttx5*mttx9 + k_gapdh);
  mtty(9) = (v_ldh*( - k_lac*k_nad*mttx11*mttx13 + k_nadh*k_pyr*mttx14*mttx18)) \
/(k_lac*k_nad*mttx11*mttx13*rho_ldh + k_ldh - k_nadh*k_pyr*mttx14*mttx18*rho_ldh \
 + k_nadh*k_pyr*mttx14*mttx18);
  mtty(10) = (v_pgk*( - k_adp*k_dpg*mttx1*mttx10 + k_atp*k_p3g*mttx16*mttx3))/( \
k_adp*k_dpg*mttx1*mttx10*rho_pgk - k_adp*k_dpg*mttx1*mttx10 - k_atp*k_p3g*mttx16 \
*mttx3*rho_pgk - k_pgk);
  mtty(11) = (v_pk*( - k_adp*k_pep*mttx1*mttx17 + k_atp*k_pyr*mttx18*mttx3))/( \
k_adp*k_pep*mttx1*mttx17*rho_pk - k_adp*k_pep*mttx1*mttx17 - k_atp*k_pyr*mttx18* \
  mttx3*rho_pk - k_pk);
  mtty(12) = (k_gly*mttx22*v_gpa*( - k_g1p*mttx20 + k_p*mttx5))/(k_g1p*k_gly* \
  mttx20*mttx22*rho_gpa - k_gly*k_p*mttx22*mttx5*rho_gpa + k_gly*k_p*mttx22*mttx5  \
+ k_gpa);
  mtty(13) = (k_gly*mttx22*v_gpb*( - k_g1p*mttx20 + k_p*mttx5))/(k_g1p*k_gly* \
  mttx20*mttx22*rho_gpb - k_gly*k_p*mttx22*mttx5*rho_gpb + k_gly*k_p*mttx22*mttx5  \
+ k_gpb);
  mtty(14) = (v_pgi*( - k_f6p*mttx19 + k_g6p*mttx21))/(k_f6p*mttx19*rho_pgi -  \
k_g6p*mttx21*rho_pgi + k_g6p*mttx21 + k_pgi);
  mtty(15) = (v_pglm*( - k_g1p*mttx20 + k_g6p*mttx21))/(k_g1p*mttx20*rho_pglm - \
 k_g1p*mttx20 - k_g6p*mttx21*rho_pglm - k_pglm);
  mtty(16) = (v_pfk*( - k_adp*k_fbp*mttx1*mttx8 + k_atp*k_f6p*mttx19*mttx3))/( \
k_adp*k_fbp*mttx1*mttx8*rho_pfk - k_atp*k_f6p*mttx19*mttx3*rho_pfk + k_atp*k_f6p \
*mttx19*mttx3 + k_pfk);
  mtty(17) = (v_atpase*( - k_adp*k_p*mttx1*mttx5 + k_atp*mttx3))/(k_adp*k_p* \
  mttx1*mttx5*rho_atpase - k_atp*mttx3*rho_atpase + k_atp*mttx3 + k_atpase);
## END Code
endfunction

sbml.N = zeros( 22 , 16 );
sbml.Nf = zeros( 22 , 16 );
sbml.Nr = zeros( 22 , 16 );
sbml.N_float = zeros( 22 , 16 );
sbml.Nf_float = zeros( 22 , 16 );
sbml.Nr_float = zeros( 22 , 16 );
sbml.N( 5 , 1 ) =  1 ;
sbml.Nr( 5 , 1 ) =  1 ;
sbml.N_float( 5 , 1 ) =  1.0 ;
sbml.Nr_float( 5 , 1 ) =  1.0 ;
sbml.N( 6 , 1 ) =  -1 ;
sbml.Nf( 6 , 1 ) =  1 ;
sbml.N_float( 6 , 1 ) =  -1.0 ;
sbml.Nf_float( 6 , 1 ) =  1.0 ;
sbml.N( 21 , 1 ) =  -1 ;
sbml.Nf( 21 , 1 ) =  1 ;
sbml.N_float( 21 , 1 ) =  -1.0 ;
sbml.Nf_float( 21 , 1 ) =  1.0 ;
sbml.N( 5 , 2 ) =  -1 ;
sbml.Nf( 5 , 2 ) =  1 ;
sbml.N_float( 5 , 2 ) =  -1.0 ;
sbml.Nf_float( 5 , 2 ) =  1.0 ;
sbml.N( 7 , 2 ) =  1 ;
sbml.Nr( 7 , 2 ) =  1 ;
sbml.N_float( 7 , 2 ) =  1.0 ;
sbml.Nr_float( 7 , 2 ) =  1.0 ;
sbml.N( 7 , 3 ) =  -1 ;
sbml.Nf( 7 , 3 ) =  1 ;
sbml.N_float( 7 , 3 ) =  -1.0 ;
sbml.Nf_float( 7 , 3 ) =  1.0 ;
sbml.N( 8 , 3 ) =  1 ;
sbml.Nr( 8 , 3 ) =  1 ;
sbml.N_float( 8 , 3 ) =  1.0 ;
sbml.Nr_float( 8 , 3 ) =  1.0 ;
sbml.N( 1 , 4 ) =  1 ;
sbml.Nr( 1 , 4 ) =  1 ;
sbml.N_float( 1 , 4 ) =  1.0 ;
sbml.Nr_float( 1 , 4 ) =  1.0 ;
sbml.N( 3 , 4 ) =  -1 ;
sbml.Nf( 3 , 4 ) =  1 ;
sbml.N_float( 3 , 4 ) =  -1.0 ;
sbml.Nf_float( 3 , 4 ) =  1.0 ;
sbml.N( 8 , 4 ) =  -1 ;
sbml.Nf( 8 , 4 ) =  1 ;
sbml.N_float( 8 , 4 ) =  -1.0 ;
sbml.Nf_float( 8 , 4 ) =  1.0 ;
sbml.N( 9 , 4 ) =  1 ;
sbml.Nr( 9 , 4 ) =  1 ;
sbml.N_float( 9 , 4 ) =  1.0 ;
sbml.Nr_float( 9 , 4 ) =  1.0 ;
sbml.N( 9 , 5 ) =  -1 ;
sbml.Nf( 9 , 5 ) =  1 ;
sbml.N_float( 9 , 5 ) =  -1.0 ;
sbml.Nf_float( 9 , 5 ) =  1.0 ;
sbml.N( 10 , 5 ) =  1 ;
sbml.Nr( 10 , 5 ) =  1 ;
sbml.N_float( 10 , 5 ) =  1.0 ;
sbml.Nr_float( 10 , 5 ) =  1.0 ;
sbml.N( 11 , 5 ) =  1 ;
sbml.Nr( 11 , 5 ) =  1 ;
sbml.N_float( 11 , 5 ) =  1.0 ;
sbml.Nr_float( 11 , 5 ) =  1.0 ;
sbml.N( 10 , 6 ) =  1 ;
sbml.Nr( 10 , 6 ) =  1 ;
sbml.N_float( 10 , 6 ) =  1.0 ;
sbml.Nr_float( 10 , 6 ) =  1.0 ;
sbml.N( 11 , 6 ) =  -1 ;
sbml.Nf( 11 , 6 ) =  1 ;
sbml.N_float( 11 , 6 ) =  -1.0 ;
sbml.Nf_float( 11 , 6 ) =  1.0 ;
sbml.N( 2 , 7 ) =  1 ;
sbml.Nr( 2 , 7 ) =  1 ;
sbml.N_float( 2 , 7 ) =  1.0 ;
sbml.Nr_float( 2 , 7 ) =  1.0 ;
sbml.N( 6 , 7 ) =  -1 ;
sbml.Nf( 6 , 7 ) =  1 ;
sbml.N_float( 6 , 7 ) =  -1.0 ;
sbml.Nf_float( 6 , 7 ) =  1.0 ;
sbml.N( 11 , 7 ) =  -1 ;
sbml.Nf( 11 , 7 ) =  1 ;
sbml.N_float( 11 , 7 ) =  -1.0 ;
sbml.Nf_float( 11 , 7 ) =  1.0 ;
sbml.N( 12 , 7 ) =  1 ;
sbml.Nr( 12 , 7 ) =  1 ;
sbml.N_float( 12 , 7 ) =  1.0 ;
sbml.Nr_float( 12 , 7 ) =  1.0 ;
sbml.N( 20 , 7 ) =  -1 ;
sbml.Nf( 20 , 7 ) =  1 ;
sbml.N_float( 20 , 7 ) =  -1.0 ;
sbml.Nf_float( 20 , 7 ) =  1.0 ;
sbml.N( 1 , 8 ) =  -1 ;
sbml.Nf( 1 , 8 ) =  1 ;
sbml.N_float( 1 , 8 ) =  -1.0 ;
sbml.Nf_float( 1 , 8 ) =  1.0 ;
sbml.N( 3 , 8 ) =  1 ;
sbml.Nr( 3 , 8 ) =  1 ;
sbml.N_float( 3 , 8 ) =  1.0 ;
sbml.Nr_float( 3 , 8 ) =  1.0 ;
sbml.N( 12 , 8 ) =  -1 ;
sbml.Nf( 12 , 8 ) =  1 ;
sbml.N_float( 12 , 8 ) =  -1.0 ;
sbml.Nf_float( 12 , 8 ) =  1.0 ;
sbml.N( 13 , 8 ) =  1 ;
sbml.Nr( 13 , 8 ) =  1 ;
sbml.N_float( 13 , 8 ) =  1.0 ;
sbml.Nr_float( 13 , 8 ) =  1.0 ;
sbml.N( 13 , 9 ) =  -1 ;
sbml.Nf( 13 , 9 ) =  1 ;
sbml.N_float( 13 , 9 ) =  -1.0 ;
sbml.Nf_float( 13 , 9 ) =  1.0 ;
sbml.N( 14 , 9 ) =  1 ;
sbml.Nr( 14 , 9 ) =  1 ;
sbml.N_float( 14 , 9 ) =  1.0 ;
sbml.Nr_float( 14 , 9 ) =  1.0 ;
sbml.N( 14 , 10 ) =  -1 ;
sbml.Nf( 14 , 10 ) =  1 ;
sbml.N_float( 14 , 10 ) =  -1.0 ;
sbml.Nf_float( 14 , 10 ) =  1.0 ;
sbml.N( 18 , 10 ) =  1 ;
sbml.Nr( 18 , 10 ) =  1 ;
sbml.N_float( 18 , 10 ) =  1.0 ;
sbml.Nr_float( 18 , 10 ) =  1.0 ;
sbml.N( 1 , 11 ) =  -1 ;
sbml.Nf( 1 , 11 ) =  1 ;
sbml.N_float( 1 , 11 ) =  -1.0 ;
sbml.Nf_float( 1 , 11 ) =  1.0 ;
sbml.N( 3 , 11 ) =  1 ;
sbml.Nr( 3 , 11 ) =  1 ;
sbml.N_float( 3 , 11 ) =  1.0 ;
sbml.Nr_float( 3 , 11 ) =  1.0 ;
sbml.N( 18 , 11 ) =  -1 ;
sbml.Nf( 18 , 11 ) =  1 ;
sbml.N_float( 18 , 11 ) =  -1.0 ;
sbml.Nf_float( 18 , 11 ) =  1.0 ;
sbml.N( 19 , 11 ) =  1 ;
sbml.Nr( 19 , 11 ) =  1 ;
sbml.N_float( 19 , 11 ) =  1.0 ;
sbml.Nr_float( 19 , 11 ) =  1.0 ;
sbml.N( 2 , 12 ) =  -1 ;
sbml.Nf( 2 , 12 ) =  1 ;
sbml.N_float( 2 , 12 ) =  -1.0 ;
sbml.Nf_float( 2 , 12 ) =  1.0 ;
sbml.N( 15 , 12 ) =  1 ;
sbml.Nr( 15 , 12 ) =  1 ;
sbml.N_float( 15 , 12 ) =  1.0 ;
sbml.Nr_float( 15 , 12 ) =  1.0 ;
sbml.N( 19 , 12 ) =  -1 ;
sbml.Nf( 19 , 12 ) =  1 ;
sbml.N_float( 19 , 12 ) =  -1.0 ;
sbml.Nf_float( 19 , 12 ) =  1.0 ;
sbml.N( 20 , 12 ) =  1 ;
sbml.Nr( 20 , 12 ) =  1 ;
sbml.N_float( 20 , 12 ) =  1.0 ;
sbml.Nr_float( 20 , 12 ) =  1.0 ;
sbml.N( 1 , 13 ) =  1 ;
sbml.Nr( 1 , 13 ) =  1 ;
sbml.N_float( 1 , 13 ) =  1.0 ;
sbml.Nr_float( 1 , 13 ) =  1.0 ;
sbml.N( 3 , 13 ) =  -1 ;
sbml.Nf( 3 , 13 ) =  1 ;
sbml.N_float( 3 , 13 ) =  -1.0 ;
sbml.Nf_float( 3 , 13 ) =  1.0 ;
sbml.N( 4 , 13 ) =  1 ;
sbml.Nr( 4 , 13 ) =  1 ;
sbml.N_float( 4 , 13 ) =  1.0 ;
sbml.Nr_float( 4 , 13 ) =  1.0 ;
sbml.N( 16 , 13 ) =  -1 ;
sbml.Nf( 16 , 13 ) =  1 ;
sbml.N_float( 16 , 13 ) =  -1.0 ;
sbml.Nf_float( 16 , 13 ) =  1.0 ;
sbml.N( 1 , 14 ) =  2 ;
sbml.Nr( 1 , 14 ) =  2 ;
sbml.N_float( 1 , 14 ) =  2.0 ;
sbml.Nr_float( 1 , 14 ) =  2.0 ;
sbml.N( 3 , 14 ) =  -1 ;
sbml.Nf( 3 , 14 ) =  1 ;
sbml.N_float( 3 , 14 ) =  -1.0 ;
sbml.Nf_float( 3 , 14 ) =  1.0 ;
sbml.N( 17 , 14 ) =  -1 ;
sbml.Nf( 17 , 14 ) =  1 ;
sbml.N_float( 17 , 14 ) =  -1.0 ;
sbml.Nf_float( 17 , 14 ) =  1.0 ;
sbml.N( 1 , 15 ) =  1 ;
sbml.Nr( 1 , 15 ) =  1 ;
sbml.N_float( 1 , 15 ) =  1.0 ;
sbml.Nr_float( 1 , 15 ) =  1.0 ;
sbml.N( 3 , 15 ) =  -1 ;
sbml.Nf( 3 , 15 ) =  1 ;
sbml.N_float( 3 , 15 ) =  -1.0 ;
sbml.Nf_float( 3 , 15 ) =  1.0 ;
sbml.N( 6 , 15 ) =  1 ;
sbml.Nr( 6 , 15 ) =  1 ;
sbml.N_float( 6 , 15 ) =  1.0 ;
sbml.Nr_float( 6 , 15 ) =  1.0 ;
sbml.N( 15 , 16 ) =  -1 ;
sbml.Nf( 15 , 16 ) =  1 ;
sbml.N_float( 15 , 16 ) =  -1.0 ;
sbml.Nf_float( 15 , 16 ) =  1.0 ;
sbml.N( 22 , 16 ) =  1 ;
sbml.Nr( 22 , 16 ) =  1 ;
sbml.N_float( 22 , 16 ) =  1.0 ;
sbml.Nr_float( 22 , 16 ) =  1.0 ;
sbml.species{1} = "adp";
sbml.units{1} = "";
sbml.x_0{1} = "0.0";
sbml.species{2} = "NADH";
sbml.units{2} = "";
sbml.x_0{2} = "0.0";
sbml.species{3} = "atp";
sbml.units{3} = "";
sbml.x_0{3} = "0.0";
sbml.species{4} = "PCr";
sbml.units{4} = "";
sbml.x_0{4} = "0.0";
sbml.species{5} = "G1P";
sbml.units{5} = "";
sbml.x_0{5} = "0.0";
sbml.species{6} = "P";
sbml.units{6} = "";
sbml.x_0{6} = "0.0";
sbml.species{7} = "G6P";
sbml.units{7} = "";
sbml.x_0{7} = "0.0";
sbml.species{8} = "F6P";
sbml.units{8} = "";
sbml.x_0{8} = "0.0";
sbml.species{9} = "FDP";
sbml.units{9} = "";
sbml.x_0{9} = "0.0";
sbml.species{10} = "DHAP";
sbml.units{10} = "";
sbml.x_0{10} = "0.0";
sbml.species{11} = "GAP";
sbml.units{11} = "";
sbml.x_0{11} = "0.0";
sbml.species{12} = "DPG";
sbml.units{12} = "";
sbml.x_0{12} = "0.0";
sbml.species{13} = "P3G";
sbml.units{13} = "";
sbml.x_0{13} = "0.0";
sbml.species{14} = "P2G";
sbml.units{14} = "";
sbml.x_0{14} = "0.0";
sbml.species{15} = "LAC";
sbml.units{15} = "";
sbml.x_0{15} = "0.0";
sbml.species{16} = "Cr";
sbml.units{16} = "";
sbml.x_0{16} = "0.0";
sbml.species{17} = "amp";
sbml.units{17} = "";
sbml.x_0{17} = "0.0";
sbml.species{18} = "PEP";
sbml.units{18} = "";
sbml.x_0{18} = "0.0";
sbml.species{19} = "PYR";
sbml.units{19} = "";
sbml.x_0{19} = "0.0";
sbml.species{20} = "NAD";
sbml.units{20} = "";
sbml.x_0{20} = "0.0";
sbml.species{21} = "Gly";
sbml.units{21} = "";
sbml.x_0{21} = "0.0";
sbml.species{22} = "LACo";
sbml.units{22} = "";
sbml.x_0{22} = "0.0";
sbml.reaction{1} = "vgp";
sbml.kineticlaw{1} = "fracA_1 * (Vfgly_1 * P * Gly / (KgpAigly_1 * KgpApi_1) / (1 + Gly / KgpAglyf_1 + P / KgpApi_1 + Gly * P / (KgpAglyf_1 * KgpAipi_1) + Gly / KgpAglyb_1 + G1P / KgpAg1p_1 + Gly * G1P / (KgpAig1p_1 * KgpAglyb_1)) - Vfgly_1 * KgpAglyb_1 * KgpAig1p_1 / (KgpAigly_1 * KgpApi_1 * 0.31) * G1P * Gly / (KgpAglyb_1 * KgpAig1p_1) / (1 + Gly / KgpAglyf_1 + P / KgpApi_1 + Gly * P / (KgpAglyf_1 * KgpAipi_1) + Gly / KgpAglyb_1 + G1P / KgpAg1p_1 + Gly * G1P / (KgpAig1p_1 * KgpAglyb_1))) + fracB_1 * (pow(amp, nH_1) / (pow(Kgpamp_1, nH_1) * 0.02) / (1 + pow(amp, nH_1) / (pow(Kgpamp_1, nH_1) * 0.02)) * (Vfgly_1 * P * Gly / (KgpBiglyf_1 * KgpBpi_1)) / (1 + Gly / KgpBipi_1 + P / KgpBiglyf_1 + Gly / KgpBiglyb_1 + G1P / KgpBig1p_1 + Gly * P / (KgpBiglyf_1 * KgpBpi_1) + Gly * G1P / (KgpBg1p_1 * KgpBiglyb_1)) - pow(amp, nH_1) / (pow(Kgpamp_1, nH_1) * 0.02) / (1 + pow(amp, nH_1) / (pow(Kgpamp_1, nH_1) * 0.02)) * (Vfgly_1 * KgpBg1p_1 * KgpBiglyb_1 / (KgpBiglyf_1 * KgpBpi_1 * 0.31) * G1P * Gly / (KgpBg1p_1 * KgpBiglyb_1)) / (1 + Gly / KgpBipi_1 + P / KgpBiglyf_1 + Gly / KgpBiglyb_1 + G1P / KgpBig1p_1 + Gly * P / (KgpBiglyf_1 * KgpBpi_1) + Gly * G1P / (KgpBg1p_1 * KgpBiglyb_1)))";
sbml.reaction{2} = "vpglm";
sbml.kineticlaw{2} = "(Vfpglm_2 * G1P / Kpglmg1p_2 - Vfpglm_2 * Kpglmg6p_2 / (Kpglmg1p_2 * 16.62) * G6P / Kpglmg6p_2) / (1 + G1P / Kpglmg1p_2 + G6P / Kpglmg6p_2)";
sbml.reaction{3} = "vpgi";
sbml.kineticlaw{3} = "(Vbpgi_3 * Kpgig6p_3 / Kpgif6p_3 * 0.45 * G6P / Kpgig6p_3 - Vbpgi_3 * F6P / Kpgif6p_3) / (1 + F6P / Kpgif6p_3 + G6P / Kpgig6p_3)";
sbml.reaction{4} = "vpfk";
sbml.kineticlaw{4} = "Vfpfk_4 * atp * F6P * (1 + Kpfkatp_4 * Kpfkf6p_4 * Lo_4 * pow(1 + en_4 * amp / Kpfkamp_4, 4) * pow(1 + atp / Kpfkiatp_4, 4) * pow((1 + atp / KpfkatpT_4) * (1 + F6P / Kpfkf6pT_4) + FDP / KpfkfdpT_4 + adp * (1 + FDP / KpfkfdpT_4) / KpfkadpT_4, 3) / (KpfkatpT_4 * Kpfkf6pT_4 * pow(1 + amp / Kpfkamp_4, 4) * pow(1 + dn_4 * atp / Kpfkiatp_4, 4) * pow((1 + atp / Kpfkatp_4) * (1 + F6P / Kpfkf6p_4) + FDP / Kpfkfdp_4 + adp * (1 + FDP / Kpfkfdp_4) / Kpfkadp_4, 3))) / (Kpfkatp_4 * Kpfkf6p_4 * ((1 + atp / Kpfkatp_4) * (1 + F6P / Kpfkf6p_4) + FDP / Kpfkfdp_4 + adp * (1 + FDP / Kpfkfdp_4) / Kpfkadp_4) * (1 + Lo_4 * pow(1 + en_4 * amp / Kpfkamp_4, 4) * pow(1 + atp / Kpfkiatp_4, 4) * pow((1 + atp / KpfkatpT_4) * (1 + F6P / Kpfkf6pT_4) + FDP / KpfkfdpT_4 + adp * (1 + FDP / KpfkfdpT_4) / KpfkadpT_4, 4) / (pow(1 + amp / Kpfkamp_4, 4) * pow(1 + dn_4 * atp / Kpfkiatp_4, 4) * pow((1 + atp / Kpfkatp_4) * (1 + F6P / Kpfkf6p_4) + FDP / Kpfkfdp_4 + adp * (1 + FDP / Kpfkfdp_4) / Kpfkadp_4, 4)))) - 0.00411743 * Vfpfk_4 * adp * FDP * (1 + Kpfkatp_4 * Kpfkf6p_4 * Lo_4 * pow(1 + en_4 * amp / Kpfkamp_4, 4) * pow(1 + atp / Kpfkiatp_4, 4) * pow((1 + atp / KpfkatpT_4) * (1 + F6P / Kpfkf6pT_4) + FDP / KpfkfdpT_4 + adp * (1 + FDP / KpfkfdpT_4) / KpfkadpT_4, 3) / (KpfkatpT_4 * Kpfkf6pT_4 * pow(1 + amp / Kpfkamp_4, 4) * pow(1 + dn_4 * atp / Kpfkiatp_4, 4) * pow((1 + atp / Kpfkatp_4) * (1 + F6P / Kpfkf6p_4) + FDP / Kpfkfdp_4 + adp * (1 + FDP / Kpfkfdp_4) / Kpfkadp_4, 3))) / (Kpfkatp_4 * Kpfkf6p_4 * ((1 + atp / Kpfkatp_4) * (1 + F6P / Kpfkf6p_4) + FDP / Kpfkfdp_4 + adp * (1 + FDP / Kpfkfdp_4) / Kpfkadp_4) * (1 + Lo_4 * pow(1 + en_4 * amp / Kpfkamp_4, 4) * pow(1 + atp / Kpfkiatp_4, 4) * pow((1 + atp / KpfkatpT_4) * (1 + F6P / Kpfkf6pT_4) + FDP / KpfkfdpT_4 + adp * (1 + FDP / KpfkfdpT_4) / KpfkadpT_4, 4) / (pow(1 + amp / Kpfkamp_4, 4) * pow(1 + dn_4 * atp / Kpfkiatp_4, 4) * pow((1 + atp / Kpfkatp_4) * (1 + F6P / Kpfkf6p_4) + FDP / Kpfkfdp_4 + adp * (1 + FDP / Kpfkfdp_4) / Kpfkadp_4, 4))))";
sbml.reaction{5} = "vald";
sbml.kineticlaw{5} = "(Vfald_5 * FDP / Kaldfdp_5 - Vfald_5 * Kaldgap_5 * Kalddhap_5 / (Kaldfdp_5 * 9.500000e-05) * DHAP * GAP / (Kaldgap_5 * Kalddhap_5)) / (1 + FDP / Kaldfdp_5 + GAP / Kaldgap_5 + DHAP / Kalddhap_5)";
sbml.reaction{6} = "vtpi";
sbml.kineticlaw{6} = "(Vftpi_6 * GAP / Ktpigap_6 - Vftpi_6 * Ktpidhap_6 / (Ktpigap_6 * 19.2) * DHAP / Ktpidhap_6) / (1 + GAP / Ktpigap_6 + DHAP / Ktpidhap_6)";
sbml.reaction{7} = "vgapdh";
sbml.kineticlaw{7} = "(-11.236 * Vfgad_7 * DPG * NADH / (Kgapdhgap_7 * Kgapdhnad_7 * Kgapdhpi_7) + Vfgad_7 * GAP * NAD * P / (Kgapdhgap_7 * Kgapdhnad_7 * Kgapdhpi_7)) / (1 + DPG / Kgapdh13dpg_7 + GAP / Kgapdhgap_7 + NAD / Kgapdhnad_7 + GAP * NAD / (Kgapdhgap_7 * Kgapdhnad_7) + NADH / Kgapdhnadh_7 + DPG * NADH / (Kgapdh13dpg_7 * Kgapdhnadh_7) + P / Kgapdhpi_7 + GAP * NAD * P / (Kgapdhgap_7 * Kgapdhnad_7 * Kgapdhpi_7))";
sbml.reaction{8} = "vpgk";
sbml.kineticlaw{8} = "(57109 * Vbpgk_8 * adp * DPG / (Kpgk3pg_8 * Kpgkatp_8) - Vbpgk_8 * atp * P3G / (Kpgk3pg_8 * Kpgkatp_8)) / (1 + adp / Kpgkadp_8 + atp / Kpgkatp_8 + DPG / Kpgk13dpg_8 + adp * DPG / (Kpgk13dpg_8 * Kpgkadp_8) + P3G / Kpgk3pg_8 + atp * P3G / (Kpgk3pg_8 * Kpgkatp_8))";
sbml.reaction{9} = "vpgm";
sbml.kineticlaw{9} = "(Vfpgm_9 * P3G / Kpgm3pg_9 - Vfpgm_9 * Kpgm2pg_9 / (Kpgm3pg_9 * 0.18) * P2G / Kpgm2pg_9) / (1 + P3G / Kpgm3pg_9 + P2G / Kpgm2pg_9)";
sbml.reaction{10} = "ven";
sbml.kineticlaw{10} = "(Vfen_10 * P2G / Ken2pg_10 - Vfen_10 * Kenpep_10 / (Ken2pg_10 * 0.49) * PEP / Kenpep_10) / (1 + P2G / Ken2pg_10 + PEP / Kenpep_10)";
sbml.reaction{11} = "vpk";
sbml.kineticlaw{11} = "(Vfpk_11 * PEP * adp / (Kpkpep_11 * Kpkadp_11) - Vfpk_11 * Kpkpyr_11 * Kpkatp_11 / (Kpkpep_11 * Kpkadp_11 * 10304) * PYR * atp / (Kpkpyr_11 * Kpkatp_11)) / (1 + PEP / Kpkpep_11 + adp / Kpkadp_11 + PEP * adp / (Kpkpep_11 * Kpkadp_11) + atp / Kpkatp_11 + PYR / Kpkpyr_11 + PYR * atp / (Kpkpyr_11 * Kpkatp_11))";
sbml.reaction{12} = "vldh";
sbml.kineticlaw{12} = "(Vfldh_12 * PYR * NADH / (Kldhpyr_12 * Kldhnadh_12) - Vfldh_12 * Kldhlac_12 * Kldhnad_12 / (Kldhpyr_12 * Kldhnadh_12 * 16198) * LAC * NAD / (Kldhlac_12 * Kldhnad_12)) / (1 + PYR / Kldhpyr_12 + NADH / Kldhnadh_12 + PYR * NADH / (Kldhpyr_12 * Kldhnadh_12) + LAC / Kldhlac_12 + NAD / Kldhnad_12 + LAC * NAD / (Kldhlac_12 * Kldhnad_12))";
sbml.reaction{13} = "vck";
sbml.kineticlaw{13} = "(VrevCK_13 * atp * Cr / (Kckiatp_13 * Kckcr_13) - VrevCK_13 * KeqCK_13 / (Kckiatp_13 * Kckcr_13 / (Kckiadp_13 * KckPCr_13)) * adp * PCr / (Kckiadp_13 * KckPCr_13)) / (1 + adp / Kckiadp_13 + PCr / KckiPCr_13 + PCr * adp / (Kckiadp_13 * KckPCr_13) + atp / Kckiatp_13 + Cr * atp / (Kckcr_13 * Kckiatp_13))";
sbml.reaction{14} = "vadk";
sbml.kineticlaw{14} = "(Vfadk_14 * atp * amp / (Kadkatp_14 * Kadkamp_14) - Vfadk_14 * pow(Kadkadp_14, 2) / (Kadkamp_14 * Kadkatp_14 * 2.21) * pow(adp / Kadkadp_14, 2)) / (1 + atp / Kadkatp_14 + amp / Kadkamp_14 + atp * amp / (Kadkatp_14 * Kadkamp_14) + 2 * adp / Kadkadp_14 + pow(adp, 2) / pow(Kadkadp_14, 2))";
sbml.reaction{15} = "vatpase";
sbml.kineticlaw{15} = "k_15 * atp";
sbml.reaction{16} = "vfout";
sbml.kineticlaw{16} = "kout_16 * LAC";
I_const = [
];

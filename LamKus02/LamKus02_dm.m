
function [mtta,mttb,mttc,mttd,mtte] = LamKus02_dm(mttpar,mttx);
## [mtta,mttb,mttc,mttd,mtte] = LamKus02_dm(mttpar,mttx);
## System LamKus02, representation dm, language m; 
## File LamKus02_dm.m; 
## Generated by MTT on Mon Mar  2 14:55:38 AEDT 2015; 

## Horrible fudge to make mtt_m2p work
global ...
mtt_no_globals ;

## Parameters 
   k_adp 	= mttpar(1);
   k_amp 	= mttpar(2);
   k_atp 	= mttpar(3);
   k_cr 	= mttpar(4);
   k_dhap 	= mttpar(5);
   k_dpg 	= mttpar(6);
   k_f6p 	= mttpar(7);
   k_fbp 	= mttpar(8);
   k_g1p 	= mttpar(9);
   k_g6p 	= mttpar(10);
   k_gap 	= mttpar(11);
   k_gly 	= mttpar(12);
   k_lac 	= mttpar(13);
   k_laco 	= mttpar(14);
   k_nad 	= mttpar(15);
   k_nadh 	= mttpar(16);
   k_p 	= mttpar(17);
   k_p2g 	= mttpar(18);
   k_p3g 	= mttpar(19);
   k_pcr 	= mttpar(20);
   k_pep 	= mttpar(21);
   k_pyr 	= mttpar(22);
   rt 	= mttpar(23);
   k_adk 	= mttpar(24);
   k_ald 	= mttpar(25);
   k_atpase 	= mttpar(26);
   k_ck 	= mttpar(27);
   k_eno 	= mttpar(28);
   k_fout 	= mttpar(29);
   k_gapdh 	= mttpar(30);
   k_gpa 	= mttpar(31);
   k_gpb 	= mttpar(32);
   k_ldh 	= mttpar(33);
   k_pfk 	= mttpar(34);
   k_pgi 	= mttpar(35);
   k_pgk 	= mttpar(36);
   k_pglm 	= mttpar(37);
   k_pgm 	= mttpar(38);
   k_pk 	= mttpar(39);
   k_tpi 	= mttpar(40);
   rho_adk 	= mttpar(41);
   rho_ald 	= mttpar(42);
   rho_atpase 	= mttpar(43);
   rho_ck 	= mttpar(44);
   rho_eno 	= mttpar(45);
   rho_fout 	= mttpar(46);
   rho_gapdh 	= mttpar(47);
   rho_gpa 	= mttpar(48);
   rho_gpb 	= mttpar(49);
   rho_ldh 	= mttpar(50);
   rho_pfk 	= mttpar(51);
   rho_pgi 	= mttpar(52);
   rho_pgk 	= mttpar(53);
   rho_pglm 	= mttpar(54);
   rho_pgm 	= mttpar(55);
   rho_pk 	= mttpar(56);
   rho_tpi 	= mttpar(57);
   v_adk 	= mttpar(58);
   v_ald 	= mttpar(59);
   v_atpase 	= mttpar(60);
   v_ck 	= mttpar(61);
   v_eno 	= mttpar(62);
   v_fout 	= mttpar(63);
   v_gapdh 	= mttpar(64);
   v_gpa 	= mttpar(65);
   v_gpb 	= mttpar(66);
   v_ldh 	= mttpar(67);
   v_pfk 	= mttpar(68);
   v_pgi 	= mttpar(69);
   v_pgk 	= mttpar(70);
   v_pglm 	= mttpar(71);
   v_pgm 	= mttpar(72);
   v_pk 	= mttpar(73);
   v_tpi 	= mttpar(74);

## States 
mttx1 = mttx(1) ;
mttx2 = mttx(2) ;
mttx3 = mttx(3) ;
mttx4 = mttx(4) ;
mttx5 = mttx(5) ;
mttx6 = mttx(6) ;
mttx7 = mttx(7) ;
mttx8 = mttx(8) ;
mttx9 = mttx(9) ;
mttx10 = mttx(10) ;
mttx11 = mttx(11) ;
mttx12 = mttx(12) ;
mttx13 = mttx(13) ;
mttx14 = mttx(14) ;
mttx15 = mttx(15) ;
mttx16 = mttx(16) ;
mttx17 = mttx(17) ;
mttx18 = mttx(18) ;
mttx19 = mttx(19) ;
mttx20 = mttx(20) ;
mttx21 = mttx(21) ;
mttx22 = mttx(22) ;

   mtta = zeros(22,22);
   mttb = zeros(22,17);
   mttc = zeros(17,22);
   mttd = zeros(17,17);
   mtte = zeros(22,22);

## BEGIN Code

## Code
  mtte(1,1) = 1;
  mtte(2,2) = 1;
  mtte(3,3) = 1;
  mtte(4,4) = 1;
  mtte(5,5) = 1;
  mtte(6,6) = 1;
  mtte(7,7) = 1;
  mtte(8,8) = 1;
  mtte(9,9) = 1;
  mtte(10,10) = 1;
  mtte(11,11) = 1;
  mtte(12,12) = 1;
  mtte(13,13) = 1;
  mtte(14,14) = 1;
  mtte(15,15) = 1;
  mtte(16,16) = 1;
  mtte(17,17) = 1;
  mtte(18,18) = 1;
  mtte(19,19) = 1;
  mtte(20,20) = 1;
  mtte(21,21) = 1;
  mtte(22,22) = 1;
  mttb(1,1) = 2;
  mttb(1,2) = 1;
  mttb(1,10) = -1;
  mttb(1,11) = -1;
  mttb(1,16) = 1;
  mttb(1,17) = 1;
  mttb(2,1) = -1;
  mttb(3,1) = -1;
  mttb(3,2) = -1;
  mttb(3,10) = 1;
  mttb(3,11) = 1;
  mttb(3,16) = -1;
  mttb(3,17) = -1;
  mttb(4,2) = -1;
  mttb(5,8) = -1;
  mttb(5,12) = -1;
  mttb(5,13) = -1;
  mttb(5,17) = 1;
  mttb(6,2) = 1;
  mttb(7,3) = 1;
  mttb(7,4) = 1;
  mttb(8,3) = -1;
  mttb(8,16) = 1;
  mttb(9,3) = 1;
  mttb(9,4) = -1;
  mttb(9,8) = -1;
  mttb(10,8) = 1;
  mttb(10,10) = -1;
  mttb(11,6) = -1;
  mttb(11,9) = 1;
  mttb(12,6) = 1;
  mttb(13,8) = -1;
  mttb(13,9) = 1;
  mttb(14,8) = 1;
  mttb(14,9) = -1;
  mttb(15,5) = -1;
  mttb(15,7) = 1;
  mttb(16,7) = -1;
  mttb(16,10) = 1;
  mttb(17,5) = 1;
  mttb(17,11) = -1;
  mttb(18,9) = -1;
  mttb(18,11) = 1;
  mttb(19,14) = 1;
  mttb(19,16) = -1;
  mttb(20,12) = 1;
  mttb(20,13) = 1;
  mttb(20,15) = -1;
  mttb(21,14) = -1;
  mttb(21,15) = 1;
  mttc(3,8) = (k_fbp*v_ald)/k_ald;
  mttc(4,7) = ( - k_dhap*v_tpi)/k_tpi;
  mttc(4,9) = (k_gap*v_tpi)/k_tpi;
  mttc(5,15) = (k_p2g*v_eno)/k_eno;
  mttc(5,17) = ( - k_pep*v_eno)/k_eno;
  mttc(6,11) = (k_lac*v_fout)/k_fout;
  mttc(6,12) = ( - k_laco*v_fout)/k_fout;
  mttc(7,15) = ( - k_p2g*v_pgm)/k_pgm;
  mttc(7,16) = (k_p3g*v_pgm)/k_pgm;
  mttc(14,19) = ( - k_f6p*v_pgi)/k_pgi;
  mttc(14,21) = (k_g6p*v_pgi)/k_pgi;
  mttc(15,20) = (k_g1p*v_pglm)/k_pglm;
  mttc(15,21) = ( - k_g6p*v_pglm)/k_pglm;
  mttc(17,3) = (k_atp*v_atpase)/k_atpase;
## END Code
endfunction

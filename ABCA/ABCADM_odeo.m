
function [mtty] = ABCADM_odeo(mttx,mttu,mttt,mttpar);
## [mtty] = ABCADM_odeo(mttx,mttu,mttt,mttpar);
## System ABCADM, representation odeo, language m; 
## File ABCADM_odeo.m; 
## Generated by MTT on Sun Dec 28 11:54:26 AEDT 2014; 

## Horrible fudge to make mtt_m2p work
global ...
mtt_no_globals ;

## Parameters 
   k_a 	= mttpar(1);
   k_b 	= mttpar(2);
   k_c 	= mttpar(3);
   rt 	= mttpar(4);
   k_v1 	= mttpar(5);
   k_v2 	= mttpar(6);
   k_v3 	= mttpar(7);
   rho_1 	= mttpar(8);
   rho_2 	= mttpar(9);
   rho_3 	= mttpar(10);
   v_m1 	= mttpar(11);
   v_m2 	= mttpar(12);
   v_m3 	= mttpar(13);

## States 
mttx1 = mttx(1) ;
mttx2 = mttx(2) ;
mttx3 = mttx(3) ;

## Inputs 
mttu1 = mttu(1);
mttu2 = mttu(2);
mttu3 = mttu(3);

## Unknown Inputs 

   mtty = zeros(3,1);

## BEGIN Code

## Code
  mtty(1) = (v_m1*( - k_a*mttx1 + k_b*mttx2))/(k_a*mttx1*rho_1 - k_a*mttx1 -  \
k_b*mttx2*rho_1 - k_v1);
  mtty(2) = (v_m2*( - k_b*mttx2 + k_c*mttx3))/(k_b*mttx2*rho_2 - k_b*mttx2 -  \
k_c*mttx3*rho_2 - k_v2);
  mtty(3) = (v_m3*( - k_a*mttx1 + k_c*mttx3))/(k_a*mttx1*rho_3 - k_c*mttx3* \
rho_3 + k_c*mttx3 + k_v3);
## END Code
endfunction

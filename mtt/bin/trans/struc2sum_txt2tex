#! /bin/sh

     ###################################### 
     ##### Model Transformation Tools #####
     ######################################

# Bourne shell script: struc_txt2tex

# Structure file - text to TeX table conversion
# P.J.Gawthrop April 1997
# Copyright (c) P.J.Gawthrop, 1997.

###############################################################
## Version control history
###############################################################
## $Id: struc_txt2tex,v 1.5 2002/04/28 18:55:03 geraint Exp $
## $Log: struc_txt2tex,v $
## Revision 1.5  2002/04/28 18:55:03  geraint
## Fixed [ 549658 ] awk should be gawk.
## Replaced calls to awk with call to gawk.
##
## Revision 1.4  2000/12/28 12:46:59  peterg
## Put under RCS
##
# Revision 1.3  1997/12/06  19:10:41  peterg
# Reverted to tabular --- from supertabular
#
# Revision 1.2  1997/04/15  11:17:58  peterg
# Uses supertabular for long tables.
#
# Revision 1.1  1997/04/15  09:49:04  peterg
# Initial revision
#
###############################################################


# Inform user
echo "Creating $1_sum.tex"

rm -f mtt_error

#Write some file headers
echo "%% Summary file ($1_sum.txt)" > $1_sum.tex
echo "%% Generated by MTT at `date`" >> $1_sum.tex

# This is the main transformation using awk
 cat $1_struc.txt |  gawk '
function header(what){
    print "%%" what
    print name[what] " = \\begin{pmatrix}"
}

function footer(what){
print "\\end{pmatrix}\\;"  
}

BEGIN{
name["input"] = "u";
name["output"] = "y";
name["state"] = "x";
name["nonstate"] = "z";
name["unknown_input"] = "v";
name["zero_output"] = "0";

Which=""
print "\\begin{equation}"
}
{
  if ($1!=Which) {
    if (Which!="") footer(Which);
    header($1);
  }
  print $3 "\\\\";
  Which = $1;
}
END{
  footer(Which)
  print "\\end{equation}"
}
'  SYSTEM=$1  >> $1_sum.tex 2>mtt_error.txt

# Now invoke the standard error handling.
mtt_error mtt_error.txt


